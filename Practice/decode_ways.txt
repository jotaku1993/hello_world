class Solution(object):
    def numDecodings(self, s):
        """
        :type s: str
        :rtype: int
        """
        l = len(s)
        if l == 0:
            return 0
        if l == 1:
            if int(s) > 0:
                return 1
            else:
                return 0
        dp = [0] * (l+1)
        dp[0] = 1
        if int(s[0]) > 0:
            dp[1] = 1
        for i in range(2, l+1):
            #use dp, if single fits
            if int(s[i-1])>0:
                dp[i] += dp[i-1]
            #if two digits fit
            if int(s[i-2:i])>0 and int(s[i-2:i])<27 and s[i-2]!='0':
                dp[i] += dp[i-2]
            #if continues 0, return 0
            if dp[i] == 0:
                return 0
        return dp[-1]
