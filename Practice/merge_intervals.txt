# Definition for an interval.
# class Interval(object):
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution(object):
    def merge(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: List[Interval]
        """
        l = len(intervals)
        if l <= 1:
            return intervals
        
        #sort the intervals by start
        intervals.sort(cmp = lambda x, y: cmp(x.start, y.start) or (x.start == y.start and cmp(x.end,y.end)))
        
        ans = [intervals[0]]
        for i in range(1, l):
            if ans[-1].end < intervals[i].start:
                ans.append(intervals[i])
            else:
                ans[-1].end = max(ans[-1].end, intervals[i].end)
        return ans
