# Definition for binary tree with next pointer.
# class TreeLinkNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#         self.next = None

class Solution(object):
    def connect(self, root):
        """
        :type root: TreeLinkNode
        :rtype: nothing
        """
        #if no root, just return
        if root is None:
            return
        #else use bfs to go through the tree, but use log(n) space
        cnt = 0
        level = 0
        queue = []

        queue.append(root)

        while len(queue) != 0:
        	now = queue.pop(0)
        	if now.left is not None:
        		queue.append(now.left)
        		queue.append(now.right)
        	cnt += 1
        	if cnt == 2**level:
        		now.next = None
        		level += 1
        		cnt = 0
        	else:
        		now.next = queue[0]
        return
