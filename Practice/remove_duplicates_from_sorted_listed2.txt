# Difinition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        nHead = ListNode(0)
        nHead.next = head
        pre, cur = nHead, head
        count = 1
        while cur:
            #when does to the end, do it out of loop
            if cur.next is None:
                break
            #if keeps the same
            if cur.next.val == cur.val:
                count += 1
                cur = cur.next
            #if not the same
            else:
                if count >= 2:
                    count, cur = 1, cur.next
                #add the single one to the linked list
                elif count == 1:
                    pre.next = cur
                    cur = cur.next
                    pre = pre.next
                    count = 1
        #special cases in the end
        if count == 1:
            pre.next = cur
        else:
            pre.next = None
        return nHead.next
