class Solution(object):
    def multiply(self, num1, num2):
        """
        :type num1: str
        :type num2: str
        :rtype: str
        """
        #return str(int(num1)*int(num2))
        
        #change the string to the list of digits and reverse them
        l1 = len(num1)
        l2 = len(num2)
        num1 = [ord(c)-ord('0') for c in num1]
        num1.reverse()
        num2 = [ord(c)-ord('0') for c in num2]
        num2.reverse()
        #+1 to avoid the overflow
        ans = [0] * (l1 + l2 + 1)
        #calculate the multiplication
        for i in range(l1):
            for j in range(l2):
                ans[i+j] += num1[i] * num2[j]
        #calculate the carry
        for i in range(len(ans)):
        	if ans[i] > 9:
        		ans[i+1] += ans[i]//10
        		ans[i] %= 10
        #delete the redundant 0s
        for i in range(len(ans)-1, 0,-1):
        	if ans[i] == 0:
        		ans.pop()
        	else:
        		break
        ans.reverse()
        #return it to the string
        for i in range(len(ans)):
        	ans[i] = str(ans[i])
        return ''.join(ans)
