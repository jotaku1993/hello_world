# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isValidBST(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        if root is None:
            return True
            
        self.list = []
        self.inorder(root)
        
        #the value from inorder traversal should be incresing
        for i in range(len(self.list)-1):
            if self.list[i] >= self.list[i+1]:
                return False
            
        return True
        
    #use inorder traversal to get the list of values    
    def inorder(self, root):
        if root is None:
            return
        self.inorder(root.left)
        self.list.append(root.val)
        self.inorder(root.right)
